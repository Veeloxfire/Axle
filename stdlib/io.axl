#import "kernel32.axl";

WIN_STD_OUT_REF :: cast(DWORD, -11i32);
stdout_handle : HANDLE = GetStdHandle(WIN_STD_OUT_REF);

print_raw :: (string: *ascii, len: u64) -> void {
  WriteConsoleA(stdout_handle, cast(*void, string), cast(u32, len), cast(*u32, nullptr));
}

print :: (string: []ascii) -> void {
  print_raw(string.ptr, string.len);
}

print_newline :: () -> void {
  nl :: "\n";
  print_raw(nl.ptr, nl.len);
}

print_u64 :: (val: u64) -> void {
  if(val == 0) {
    zero :: "0";
    print_raw(zero.ptr, zero.len);
    return;
  }
  
  arr: [ascii; 20] = [
    0,0,0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0
  ];

  i: u64 = 0;

  while(val > 0) {
    d := val % 10;
    arr[i - 1] = cast(ascii, cast(u8, '0') + cast(u8, d));

    i = i - 1;
    val = val / 10;
  }

  print_raw(arr.ptr + i, arr.len - i);
}
